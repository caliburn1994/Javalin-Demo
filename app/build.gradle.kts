/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.5.0"

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// version
val koin = "3.2.0-beta-1"
val jackson = "2.13.2"

dependencies {
    // Kotlin
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))
    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    //
    implementation("org.jetbrains.kotlin:kotlin-reflect")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")
    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    // DSL
    // Koin Core/test features https://insert-koin.io/docs/setup/v3.2
    implementation("io.insert-koin:koin-core:$koin")
    testImplementation("io.insert-koin:koin-test:$koin")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:30.1.1-jre")
    implementation("io.javalin:javalin:4.3.0")
    implementation("com.fasterxml.jackson.core:jackson-databind:$jackson")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson")
    // Log
    implementation("org.slf4j:slf4j-simple:1.7.36")
}

application {
    // Define the main class for the application.
    mainClass.set("kyakya.icu.javalin.demo.AppKt")
}


// ref: https://handstandsam.com/2021/06/07/run-custom-gradle-task-after-build/
tasks.register("saveGitInfo") {
    doLast {
        Runtime.getRuntime().exec("bash git-info.sh")
    }
}
tasks.named("build") { finalizedBy("saveGitInfo") }

